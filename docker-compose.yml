version: "3"
networks:
  ulmaps_net:

services:
  zookeeper:
    image: zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - ulmaps_net

  kafka:
    image: bitnami/kafka:3.3.2
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_LISTENERS: DOCKER://0.0.0.0:9092,HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka:9092,HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
    networks:
      - ulmaps_net
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - ulmaps_net
    depends_on:
      - kafka

  gtfs-producer:
    build: ./producer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REALTIME_API_KEY=${REALTIME_API_KEY}
      - FEED_URL=${FEED_URL}
      - TRIP_UPDATES_POLL_INTERVAL=60
      - VEHICLE_POSITIONS_POLL_INTERVAL=20
      - LOG_LEVEL=INFO
    networks:
      - ulmaps_net
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped

  fastapi-app:
    build: ./app
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DATABASE_URL=postgresql+asyncpg://airflow:airflow@postgres:5432/gtfs_static
      - REDIS_URL=redis://redis:6379/1
    networks:
      - ulmaps_net
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./app:/app
